<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">


    <!-- bean definitions here -->
    <!--
        配置匿名访问路径：
        security="none":表示不需要认证就能访问
        pattern ：指定那些url不需要认证就能访问
    -->
    <security:http security="none" pattern="/js/**"></security:http>
    <security:http security="none" pattern="/favicon.ico"></security:http>
    <security:http security="none" pattern="/login.html"></security:http>
    <!--http：用于定义相关权限控制
        auto-config:表示使用security框架提供的自动化配置，登录页面，登出功能等
        use-expressions：是否使用表达式配置权限
    -->
    <security:http auto-config="true" use-expressions="true">
        <!--
               intercept-url标签:配置具体的权限控制规则
               pattern属性:表示对那些url进行拦截控制，/**拦截所有请求
               access属性：表示对pattern属性拦截的url需要拥有哪些权限才能访问
               hasRole('ROLE_ADMIN')：必须拥有ROLE_ADMIN的角色才能去访问被pattern限制的url
        -->
        <security:intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')"></security:intercept-url>
        <!--
            login-page:指定登录页面
            username-parameter：登录的用户
            password-parameter：登陆的密码
            login-processing-url：提交登录时发送的url
            default-target-url：登录成功之后默认跳转的url
            always-use-default-target：是否总是使用默认跳转的url
            authentication-failure-url：登录失败后跳转的url
        -->
        <security:form-login login-page="/login.html"
                             username-parameter="username"
                             password-parameter="password"
                             login-processing-url="/login.do"
                             default-target-url="/index.html"
                             always-use-default-target="true"
                             authentication-failure-url="/login.html"></security:form-login>

        <!--
            csrf：对应CsrfFilter过滤器
            disabled：是否启用CsrfFilter过滤器，如果使用自定义登录页面需要关闭此项，否则登录操作会被禁用（403）
        -->
        <security:csrf disabled="true"></security:csrf>
    </security:http>

    <!--authentication-manager：认证管理器，用于处理认证操作。-->
    <security:authentication-manager>
        <!--authentication-provider：认证提供者，执行具体的认证逻辑-->
        <security:authentication-provider>
            <!--user-service：用于获取用户信息，提供给authentication-provider进行认证-->
              <security:user-service>
                  <!--  user：定义用户信息，可以指定用户名、密码、角色，后期可以改为从数据库查询用户信息-->
                 <!-- 	{noop}：表示当前使用的密码为明文，没有被加密过-->
                  <!--表示只要使用用户名:admin，密码是明文的admin进行登陆的用户，就给该用户赋予ROLE_ADMIN的角色-->
                  <security:user name="admin" password="{noop}admin" authorities="ROLE_ADMIN"></security:user>
              </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>
</beans>